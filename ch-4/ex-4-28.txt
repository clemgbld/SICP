we need to force the operator whenever it's a thunk

an exemple would be:

(define w (id (id 10))) from exercise 27 

the first id procedure is applied as a compound procedure so its operands (id 10) are delayed

and we have a list like that (list (list 'thunk id env) (list 'thunk 10 env))

and when we want to print the value of w we need to force the id operator which is a thunk in order to apply it and get the result

so we force operator before passing it to apply to handle nested delayed procedure calls



